// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// modified_double_func_cpp
double modified_double_func_cpp(double p, double C, double eps);
RcppExport SEXP _LinearBF_modified_double_func_cpp(SEXP pSEXP, SEXP CSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(modified_double_func_cpp(p, C, eps));
    return rcpp_result_gen;
END_RCPP
}
// doubling_Flegal_find_n0
int doubling_Flegal_find_n0(const double eps, const double C);
RcppExport SEXP _LinearBF_doubling_Flegal_find_n0(SEXP epsSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(doubling_Flegal_find_n0(eps, C));
    return rcpp_result_gen;
END_RCPP
}
// doubling_Flegal_Herbei_cpp
Rcpp::List doubling_Flegal_Herbei_cpp(double p, const double eps, const double C, int n0, const int max_iter, const double verbose);
RcppExport SEXP _LinearBF_doubling_Flegal_Herbei_cpp(SEXP pSEXP, SEXP epsSEXP, SEXP CSEXP, SEXP n0SEXP, SEXP max_iterSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const double >::type C(CSEXP);
    Rcpp::traits::input_parameter< int >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< const int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(doubling_Flegal_Herbei_cpp(p, eps, C, n0, max_iter, verbose));
    return rcpp_result_gen;
END_RCPP
}
// doubling_Flegal_Morina_find_n0
int doubling_Flegal_Morina_find_n0(const double eps, const double C);
RcppExport SEXP _LinearBF_doubling_Flegal_Morina_find_n0(SEXP epsSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(doubling_Flegal_Morina_find_n0(eps, C));
    return rcpp_result_gen;
END_RCPP
}
// doubling_Flegal_Herbei_Morina_cpp
Rcpp::List doubling_Flegal_Herbei_Morina_cpp(double p, const double eps, const double C, int n0, const int max_iter, const double verbose);
RcppExport SEXP _LinearBF_doubling_Flegal_Herbei_Morina_cpp(SEXP pSEXP, SEXP epsSEXP, SEXP CSEXP, SEXP n0SEXP, SEXP max_iterSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const double >::type C(CSEXP);
    Rcpp::traits::input_parameter< int >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< const int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(doubling_Flegal_Herbei_Morina_cpp(p, eps, C, n0, max_iter, verbose));
    return rcpp_result_gen;
END_RCPP
}
// logistic_cpp
Rcpp::List logistic_cpp(float C, float p);
RcppExport SEXP _LinearBF_logistic_cpp(SEXP CSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type C(CSEXP);
    Rcpp::traits::input_parameter< float >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(logistic_cpp(C, p));
    return rcpp_result_gen;
END_RCPP
}
// doubling_Huber_2019_iter_cpp
Rcpp::List doubling_Huber_2019_iter_cpp(float C, int i, float eps, float p);
RcppExport SEXP _LinearBF_doubling_Huber_2019_iter_cpp(SEXP CSEXP, SEXP iSEXP, SEXP epsSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type C(CSEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< float >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< float >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(doubling_Huber_2019_iter_cpp(C, i, eps, p));
    return rcpp_result_gen;
END_RCPP
}
// doubling_find_n0
int doubling_find_n0(const double eps);
RcppExport SEXP _LinearBF_doubling_find_n0(SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(doubling_find_n0(eps));
    return rcpp_result_gen;
END_RCPP
}
// doubling_Nacu_Peres_cpp
Rcpp::List doubling_Nacu_Peres_cpp(double p, const double eps, int n0, const int max_iter, const double verbose);
RcppExport SEXP _LinearBF_doubling_Nacu_Peres_cpp(SEXP pSEXP, SEXP epsSEXP, SEXP n0SEXP, SEXP max_iterSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< const int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(doubling_Nacu_Peres_cpp(p, eps, n0, max_iter, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LinearBF_modified_double_func_cpp", (DL_FUNC) &_LinearBF_modified_double_func_cpp, 3},
    {"_LinearBF_doubling_Flegal_find_n0", (DL_FUNC) &_LinearBF_doubling_Flegal_find_n0, 2},
    {"_LinearBF_doubling_Flegal_Herbei_cpp", (DL_FUNC) &_LinearBF_doubling_Flegal_Herbei_cpp, 6},
    {"_LinearBF_doubling_Flegal_Morina_find_n0", (DL_FUNC) &_LinearBF_doubling_Flegal_Morina_find_n0, 2},
    {"_LinearBF_doubling_Flegal_Herbei_Morina_cpp", (DL_FUNC) &_LinearBF_doubling_Flegal_Herbei_Morina_cpp, 6},
    {"_LinearBF_logistic_cpp", (DL_FUNC) &_LinearBF_logistic_cpp, 2},
    {"_LinearBF_doubling_Huber_2019_iter_cpp", (DL_FUNC) &_LinearBF_doubling_Huber_2019_iter_cpp, 4},
    {"_LinearBF_doubling_find_n0", (DL_FUNC) &_LinearBF_doubling_find_n0, 1},
    {"_LinearBF_doubling_Nacu_Peres_cpp", (DL_FUNC) &_LinearBF_doubling_Nacu_Peres_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_LinearBF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
